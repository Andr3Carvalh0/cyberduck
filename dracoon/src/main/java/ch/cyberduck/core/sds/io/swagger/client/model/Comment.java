/*
 * DRACOON
 * REST Web Services for DRACOON<br>Version: 4.11.2  - built at: 2019-05-03 12:34:42<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a>
 *
 * OpenAPI spec version: 4.11.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.model;

import org.joda.time.DateTime;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Node comment information
 */
@ApiModel(description = "Node comment information")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-05-17T14:22:07.810+02:00")
public class Comment {
    @JsonProperty("id")
    private Long id = null;

    @JsonProperty("text")
    private String text = null;

    @JsonProperty("createdAt")
    private DateTime createdAt = null;

    @JsonProperty("createdBy")
    private UserInfo createdBy = null;

    @JsonProperty("updatedAt")
    private DateTime updatedAt = null;

    @JsonProperty("updatedBy")
    private UserInfo updatedBy = null;

    @JsonProperty("isChanged")
    private Boolean isChanged = null;

    @JsonProperty("isDeleted")
    private Boolean isDeleted = null;

    public Comment id(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Comment ID
     *
     * @return id
     **/
    @ApiModelProperty(required = true, value = "Comment ID")
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Comment text(String text) {
        this.text = text;
        return this;
    }

    /**
     * Comment text
     *
     * @return text
     **/
    @ApiModelProperty(required = true, value = "Comment text")
    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }

    public Comment createdAt(DateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Creation date
     *
     * @return createdAt
     **/
    @ApiModelProperty(example = "2018-01-01T00:00:00", required = true, value = "Creation date")
    public DateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(DateTime createdAt) {
        this.createdAt = createdAt;
    }

    public Comment createdBy(UserInfo createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Created by user
     *
     * @return createdBy
     **/
    @ApiModelProperty(required = true, value = "Created by user")
    public UserInfo getCreatedBy() {
        return createdBy;
    }

    public void setCreatedBy(UserInfo createdBy) {
        this.createdBy = createdBy;
    }

    public Comment updatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Modification date
     *
     * @return updatedAt
     **/
    @ApiModelProperty(example = "2018-01-01T00:00:00", required = true, value = "Modification date")
    public DateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public Comment updatedBy(UserInfo updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Modified by user
     *
     * @return updatedBy
     **/
    @ApiModelProperty(required = true, value = "Modified by user")
    public UserInfo getUpdatedBy() {
        return updatedBy;
    }

    public void setUpdatedBy(UserInfo updatedBy) {
        this.updatedBy = updatedBy;
    }

    public Comment isChanged(Boolean isChanged) {
        this.isChanged = isChanged;
        return this;
    }

    /**
     * Determines whether comment was edited or not
     *
     * @return isChanged
     **/
    @ApiModelProperty(required = true, value = "Determines whether comment was edited or not")
    public Boolean isIsChanged() {
        return isChanged;
    }

    public void setIsChanged(Boolean isChanged) {
        this.isChanged = isChanged;
    }

    public Comment isDeleted(Boolean isDeleted) {
        this.isDeleted = isDeleted;
        return this;
    }

    /**
     * Determines whether comment was deleted or not
     *
     * @return isDeleted
     **/
    @ApiModelProperty(required = true, value = "Determines whether comment was deleted or not")
    public Boolean isIsDeleted() {
        return isDeleted;
    }

    public void setIsDeleted(Boolean isDeleted) {
        this.isDeleted = isDeleted;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if(this == o) {
            return true;
        }
        if(o == null || getClass() != o.getClass()) {
            return false;
        }
        Comment comment = (Comment) o;
        return Objects.equals(this.id, comment.id) &&
            Objects.equals(this.text, comment.text) &&
            Objects.equals(this.createdAt, comment.createdAt) &&
            Objects.equals(this.createdBy, comment.createdBy) &&
            Objects.equals(this.updatedAt, comment.updatedAt) &&
            Objects.equals(this.updatedBy, comment.updatedBy) &&
            Objects.equals(this.isChanged, comment.isChanged) &&
            Objects.equals(this.isDeleted, comment.isDeleted);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, text, createdAt, createdBy, updatedAt, updatedBy, isChanged, isDeleted);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Comment {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    text: ").append(toIndentedString(text)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
        sb.append("    isChanged: ").append(toIndentedString(isChanged)).append("\n");
        sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if(o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

