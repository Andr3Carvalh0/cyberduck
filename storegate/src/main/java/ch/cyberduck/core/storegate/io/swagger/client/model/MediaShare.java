/*
 * Storegate.Web
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v4
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.storegate.io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import ch.cyberduck.core.storegate.io.swagger.client.model.MediaFolder;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * A enhanced shared mediaFolder
 */
@ApiModel(description = "A enhanced shared mediaFolder")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-03-25T11:22:03.779+03:00")
public class MediaShare {
  @JsonProperty("url")
  private String url = null;

  @JsonProperty("mediaFolder")
  private MediaFolder mediaFolder = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("created")
  private LocalDateTime created = null;

  @JsonProperty("accessed")
  private Integer accessed = null;

  @JsonProperty("lastAccessed")
  private LocalDateTime lastAccessed = null;

  @JsonProperty("ownerId")
  private String ownerId = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("sentToEmails")
  private List<String> sentToEmails = null;

  @JsonProperty("accessLimit")
  private Integer accessLimit = null;

  @JsonProperty("accessUntil")
  private LocalDateTime accessUntil = null;

  @JsonProperty("allowUpload")
  private Boolean allowUpload = null;

  @JsonProperty("uploadNotificationEmails")
  private List<String> uploadNotificationEmails = null;

  @JsonProperty("uploadHideContents")
  private Boolean uploadHideContents = null;

  @JsonProperty("mediaAllowDownload")
  private Boolean mediaAllowDownload = null;

  @JsonProperty("allowComments")
  private Boolean allowComments = null;

  public MediaShare url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Url to the share
   * @return url
  **/
  @ApiModelProperty(value = "Url to the share")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public MediaShare mediaFolder(MediaFolder mediaFolder) {
    this.mediaFolder = mediaFolder;
    return this;
  }

   /**
   * The shared item.
   * @return mediaFolder
  **/
  @ApiModelProperty(value = "The shared item.")
  public MediaFolder getMediaFolder() {
    return mediaFolder;
  }

  public void setMediaFolder(MediaFolder mediaFolder) {
    this.mediaFolder = mediaFolder;
  }

  public MediaShare id(String id) {
    this.id = id;
    return this;
  }

   /**
   * The share id.
   * @return id
  **/
  @ApiModelProperty(value = "The share id.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public MediaShare created(LocalDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * When the share was created.
   * @return created
  **/
  @ApiModelProperty(value = "When the share was created.")
  public LocalDateTime getCreated() {
    return created;
  }

  public void setCreated(LocalDateTime created) {
    this.created = created;
  }

  public MediaShare accessed(Integer accessed) {
    this.accessed = accessed;
    return this;
  }

   /**
   * Number of times that the share has been accessed.
   * @return accessed
  **/
  @ApiModelProperty(value = "Number of times that the share has been accessed.")
  public Integer getAccessed() {
    return accessed;
  }

  public void setAccessed(Integer accessed) {
    this.accessed = accessed;
  }

  public MediaShare lastAccessed(LocalDateTime lastAccessed) {
    this.lastAccessed = lastAccessed;
    return this;
  }

   /**
   * Last time the share was accessed
   * @return lastAccessed
  **/
  @ApiModelProperty(value = "Last time the share was accessed")
  public LocalDateTime getLastAccessed() {
    return lastAccessed;
  }

  public void setLastAccessed(LocalDateTime lastAccessed) {
    this.lastAccessed = lastAccessed;
  }

  public MediaShare ownerId(String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

   /**
   * The owner.
   * @return ownerId
  **/
  @ApiModelProperty(value = "The owner.")
  public String getOwnerId() {
    return ownerId;
  }

  public void setOwnerId(String ownerId) {
    this.ownerId = ownerId;
  }

  public MediaShare password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Optional share password.
   * @return password
  **/
  @ApiModelProperty(value = "Optional share password.")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public MediaShare sentToEmails(List<String> sentToEmails) {
    this.sentToEmails = sentToEmails;
    return this;
  }

  public MediaShare addSentToEmailsItem(String sentToEmailsItem) {
    if (this.sentToEmails == null) {
      this.sentToEmails = new ArrayList<>();
    }
    this.sentToEmails.add(sentToEmailsItem);
    return this;
  }

   /**
   * Add addresses that the share have been mailed to.
   * @return sentToEmails
  **/
  @ApiModelProperty(value = "Add addresses that the share have been mailed to.")
  public List<String> getSentToEmails() {
    return sentToEmails;
  }

  public void setSentToEmails(List<String> sentToEmails) {
    this.sentToEmails = sentToEmails;
  }

  public MediaShare accessLimit(Integer accessLimit) {
    this.accessLimit = accessLimit;
    return this;
  }

   /**
   * Limit the number of access.
   * @return accessLimit
  **/
  @ApiModelProperty(value = "Limit the number of access.")
  public Integer getAccessLimit() {
    return accessLimit;
  }

  public void setAccessLimit(Integer accessLimit) {
    this.accessLimit = accessLimit;
  }

  public MediaShare accessUntil(LocalDateTime accessUntil) {
    this.accessUntil = accessUntil;
    return this;
  }

   /**
   * Limit access to before this date.
   * @return accessUntil
  **/
  @ApiModelProperty(value = "Limit access to before this date.")
  public LocalDateTime getAccessUntil() {
    return accessUntil;
  }

  public void setAccessUntil(LocalDateTime accessUntil) {
    this.accessUntil = accessUntil;
  }

  public MediaShare allowUpload(Boolean allowUpload) {
    this.allowUpload = allowUpload;
    return this;
  }

   /**
   * Allow upload in folder.
   * @return allowUpload
  **/
  @ApiModelProperty(value = "Allow upload in folder.")
  public Boolean isAllowUpload() {
    return allowUpload;
  }

  public void setAllowUpload(Boolean allowUpload) {
    this.allowUpload = allowUpload;
  }

  public MediaShare uploadNotificationEmails(List<String> uploadNotificationEmails) {
    this.uploadNotificationEmails = uploadNotificationEmails;
    return this;
  }

  public MediaShare addUploadNotificationEmailsItem(String uploadNotificationEmailsItem) {
    if (this.uploadNotificationEmails == null) {
      this.uploadNotificationEmails = new ArrayList<>();
    }
    this.uploadNotificationEmails.add(uploadNotificationEmailsItem);
    return this;
  }

   /**
   * Send mail to the following email addresses when files have been uploaded. (Separate call needed to send the mail).
   * @return uploadNotificationEmails
  **/
  @ApiModelProperty(value = "Send mail to the following email addresses when files have been uploaded. (Separate call needed to send the mail).")
  public List<String> getUploadNotificationEmails() {
    return uploadNotificationEmails;
  }

  public void setUploadNotificationEmails(List<String> uploadNotificationEmails) {
    this.uploadNotificationEmails = uploadNotificationEmails;
  }

  public MediaShare uploadHideContents(Boolean uploadHideContents) {
    this.uploadHideContents = uploadHideContents;
    return this;
  }

   /**
   * Hide the contents in the folder. (Allows upload, blocks download).
   * @return uploadHideContents
  **/
  @ApiModelProperty(value = "Hide the contents in the folder. (Allows upload, blocks download).")
  public Boolean isUploadHideContents() {
    return uploadHideContents;
  }

  public void setUploadHideContents(Boolean uploadHideContents) {
    this.uploadHideContents = uploadHideContents;
  }

  public MediaShare mediaAllowDownload(Boolean mediaAllowDownload) {
    this.mediaAllowDownload = mediaAllowDownload;
    return this;
  }

   /**
   * Allow download of original image.
   * @return mediaAllowDownload
  **/
  @ApiModelProperty(value = "Allow download of original image.")
  public Boolean isMediaAllowDownload() {
    return mediaAllowDownload;
  }

  public void setMediaAllowDownload(Boolean mediaAllowDownload) {
    this.mediaAllowDownload = mediaAllowDownload;
  }

  public MediaShare allowComments(Boolean allowComments) {
    this.allowComments = allowComments;
    return this;
  }

   /**
   * Shows Facebook comments on share page
   * @return allowComments
  **/
  @ApiModelProperty(value = "Shows Facebook comments on share page")
  public Boolean isAllowComments() {
    return allowComments;
  }

  public void setAllowComments(Boolean allowComments) {
    this.allowComments = allowComments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MediaShare mediaShare = (MediaShare) o;
    return Objects.equals(this.url, mediaShare.url) &&
        Objects.equals(this.mediaFolder, mediaShare.mediaFolder) &&
        Objects.equals(this.id, mediaShare.id) &&
        Objects.equals(this.created, mediaShare.created) &&
        Objects.equals(this.accessed, mediaShare.accessed) &&
        Objects.equals(this.lastAccessed, mediaShare.lastAccessed) &&
        Objects.equals(this.ownerId, mediaShare.ownerId) &&
        Objects.equals(this.password, mediaShare.password) &&
        Objects.equals(this.sentToEmails, mediaShare.sentToEmails) &&
        Objects.equals(this.accessLimit, mediaShare.accessLimit) &&
        Objects.equals(this.accessUntil, mediaShare.accessUntil) &&
        Objects.equals(this.allowUpload, mediaShare.allowUpload) &&
        Objects.equals(this.uploadNotificationEmails, mediaShare.uploadNotificationEmails) &&
        Objects.equals(this.uploadHideContents, mediaShare.uploadHideContents) &&
        Objects.equals(this.mediaAllowDownload, mediaShare.mediaAllowDownload) &&
        Objects.equals(this.allowComments, mediaShare.allowComments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, mediaFolder, id, created, accessed, lastAccessed, ownerId, password, sentToEmails, accessLimit, accessUntil, allowUpload, uploadNotificationEmails, uploadHideContents, mediaAllowDownload, allowComments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MediaShare {\n");
    
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    mediaFolder: ").append(toIndentedString(mediaFolder)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    accessed: ").append(toIndentedString(accessed)).append("\n");
    sb.append("    lastAccessed: ").append(toIndentedString(lastAccessed)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    sentToEmails: ").append(toIndentedString(sentToEmails)).append("\n");
    sb.append("    accessLimit: ").append(toIndentedString(accessLimit)).append("\n");
    sb.append("    accessUntil: ").append(toIndentedString(accessUntil)).append("\n");
    sb.append("    allowUpload: ").append(toIndentedString(allowUpload)).append("\n");
    sb.append("    uploadNotificationEmails: ").append(toIndentedString(uploadNotificationEmails)).append("\n");
    sb.append("    uploadHideContents: ").append(toIndentedString(uploadHideContents)).append("\n");
    sb.append("    mediaAllowDownload: ").append(toIndentedString(mediaAllowDownload)).append("\n");
    sb.append("    allowComments: ").append(toIndentedString(allowComments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

